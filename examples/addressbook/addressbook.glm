using repository.gtk;

class PersonDialog: GtkDialog
{
	property string name 
	{
		getter { return priv.entry_name.text; }
		setter { priv.entry_name.text = value; }
	}

	property string phone_number 
	{
		getter { return priv.entry_phone_number.text; }
		setter { priv.entry_phone_number.text = value; }
	}

	property string address
	{
		getter { return priv.entry_address.text; }
		setter { priv.entry_name.address = value; }
	}


	init
	{
		priv.entry_name = new GtkEntry { "visible": true, "hexpand": true };
		priv.entry_phone_number = new GtkEntry { "visible": true, "hexpand": true };
		priv.entry_address = new GtkEntry {	"visible": true, "hexpand": true };
		priv.body = new GtkGrid {
			"border-width": 20,
			"column-spacing": 10,
			"row-spacing": 10,
			"visible": true
		};

		priv.body.attach(new @GtkLabel { "label":"Name", "visible": true },0,0,1,1);
		priv.body.attach(new @GtkLabel { "label":"Phone Number", "visible": true },0,1,1,1);
		priv.body.attach(new @GtkLabel { "label":"Address", "visible": true },0,2,1,1);

		priv.body.attach(priv.entry_name,1,0,1,1);
		priv.body.attach(priv.entry_phone_number,1,1,1,1);
		priv.body.attach(priv.entry_address,1,2,1,1);

		priv.button_save = new GtkButton {
			"label": "Save",
			"visible": true
		};

		priv.button_cancel = new GtkButton {
			"label": "Cancel",
			"visible": true
		};

		priv.header_bar = this.get_header_bar();
		this.title = "Person";		
		
		this.get_content_area().pack_start(priv.body,true,true,0);
	}

	constructed
	{
		priv.header_bar.pack_start(priv.button_cancel);
		priv.header_bar.pack_end(priv.button_save);

		priv.button_save.get_style_context().add_class("suggested-action");
		priv.button_save.on("clicked",do() {
			this.response(1);
		});

		priv.button_cancel.on("clicked",do() {
			this.response(0);
		});
	}
}

class Window: GtkApplicationWindow
{
	init {
		GtkTreeViewColumn column_name = new @GtkTreeViewColumn { "title": "Name", "resizable": true };
		GtkTreeViewColumn column_phone_number = new @GtkTreeViewColumn { "title": "Phone Number","resizable": true };
		GtkTreeViewColumn column_address = new @GtkTreeViewColumn { "title": "Address" };

		GtkCellRendererText cell_name = new @GtkCellRendererText {};
		GtkCellRendererText cell_phone_number = new @GtkCellRendererText {};
		GtkCellRendererText cell_address = new @GtkCellRendererText {};

		priv.model = GtkListStore.new(4,int,string,string,string);

		priv.tree_view = new GtkTreeView {
			"enable-grid-lines": GtkTreeViewGridLines.both,
			"model": priv.model,
			"visible": true
		};

		priv.scrolled_window = new GtkScrolledWindow {
			"visible": true
		};

		priv.box = new GtkBox {
			"visible": true,
			"orientation": GtkOrientation.vertical
		};
		
		priv.action_bar = new GtkActionBar {
			"visible": true
		};

		priv.button_add = new GtkButton {
			"image": new @GtkImage {
				"visible": true,
				"icon-name": "list-add-symbolic"
			},
			"visible": true
		};

		priv.button_remove = new GtkButton {
			"image": new @GtkImage {
				"visible": true,
				"icon-name": "list-remove-symbolic"
			},
			"visible": true
		};

		priv.button_refresh = new GtkButton {
			"image": new @GtkImage {
				"visible": true,
				"icon-name": "view-refresh-symbolic"
			},
			"visible": true
		};

		priv.button_edit = new GtkButton {
			"image": new @GtkImage {
				"visible": true,
				"icon-name": "document-edit-symbolic"
			},
			"visible": true
		};

		//tree_view
		priv.tree_view.append_column(column_name);
		priv.tree_view.append_column(column_phone_number);
		priv.tree_view.append_column(column_address);

		column_name.pack_start(cell_name,true);
		column_name.add_attribute(cell_name,"text",1);

		column_phone_number.pack_start(cell_phone_number,true);
		column_phone_number.add_attribute(cell_phone_number,"text",2);

		column_address.pack_start(cell_address,true);
		column_address.add_attribute(cell_address,"text",3);

		//packing		
		this.add(priv.box);
		priv.scrolled_window.add(priv.tree_view);
		priv.box.pack_start(priv.scrolled_window,true,true,0);
		priv.box.pack_end(priv.action_bar);
		priv.action_bar.pack_start(priv.button_add);
		priv.action_bar.pack_start(priv.button_remove);
		priv.action_bar.pack_start(priv.button_edit);
		priv.action_bar.pack_start(priv.button_refresh);

		//signals
		priv.button_add.on("clicked",do(){
			PersonDialog dialog = new @PersonDialog {
				"use-header-bar": true,
				"name": "",
				"phone-number": "Nothing",
				"address": "",
				"transient-for": this,
				"default-height": 200,
				"default-width": 400
			};
			
			if(dialog.run())
			{
				int idperson = this.insert(dialog);
				GtkTreeIter iter =  GtkTreeIter.new();
				print(iter);
				priv.model.append(iter);
				print(iter);
				priv.model.set_value(iter,0,idperson);
				priv.model.set_value(iter,1,dialog.name);
				priv.model.set_value(iter,2,dialog.phone_number);
				priv.model.set_value(iter,3,dialog.address);
			}
			dialog.destroy();
		});

		priv.button_remove.on("clicked",do(){
		    GtkTreeSelection selection =  priv.tree_view.get_selection();
            GtkTreeIter iter = GtkTreeIter.new();
            

            
            if(selection.get_selected(null,iter)) {
                var idperson;
             
                priv.model.get_value(iter,0,pointerof(idperson));                
                this.delete(idperson);
                priv.model.remove(iter);
            }
		});

		priv.button_edit.on("clicked",do(){
            GtkTreeSelection selection =  priv.tree_view.get_selection();
            GtkTreeIter iter = GtkTreeIter.new();
            
            if(selection.get_selected(null,iter)) {
                var idperson;
                var name;
                var phone_number;
                var address;

                priv.model.get_value(iter,0,pointerof(idperson));                
                priv.model.get_value(iter,1,pointerof(name));
                priv.model.get_value(iter,2,pointerof(phone_number));
                priv.model.get_value(iter,3,pointerof(address));
            
                PersonDialog dialog = new @PersonDialog {
				    "use-header-bar": true,
				    "name": "",
				    "phone-number": "Nothing",
				    "address": "",
				    "transient-for": this,
				    "default-height": 200,
				    "default-width": 400
			    };
			
			    if(dialog.run())
			    {
				    this.update(idperson,dialog);
				    priv.model.set_value(iter,1,dialog.name);
				    priv.model.set_value(iter,2,dialog.phone_number);
				    priv.model.set_value(iter,3,dialog.address);
			    }
			    dialog.destroy();
            }
		});

		priv.button_refresh.on("clicked",do(){
			this.refresh();
		});

	}

	constructed {
		this.title = "Address Book";
		this.default_width = 600;
		this.default_height = 400;
		this.refresh();
	}

	void refresh()
	{
		priv.model.clear();	
	}

	void update(int id_person,PersonDialog dialog)
	{
		
	}

	int insert(PersonDialog dialog)
	{
		print(dialog.name);
		return 0;
	}

	void delete(int id_person)
	{

	}

	
}

class Application: GtkApplication
{
	init 
	{
		this.on("activate",do() 
		{
			Window window = new @Window	{	};
			window.show();
			this.add_window(window);
		});
	}
}

int main(int argc,array argv)
{
	Application app = new Application 
	{
		"application-id":"org.gnome.example.addressbook"
	};

	return app.run(argc,argv);
}
